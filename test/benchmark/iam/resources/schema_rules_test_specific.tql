define

high-arity-test-segregation-violation sub relation,
    relates subject, relates object, relates action;
subject plays high-arity-test-segregation-violation:subject;
object plays high-arity-test-segregation-violation:object;
action plays high-arity-test-segregation-violation:action;

rule high-arity-segregation-violation-detection:
when {
    $ac1(object: $o, action: $a1) isa access;
    $ac2(object: $o, action: $a2) isa access;
    $p1(subject: $s, access: $ac1) isa permission;
    $p2(subject: $s, access: $ac2) isa permission;
} then {
    (subject: $s, object: $o, action: $a1, action: $a2) isa high-arity-test-segregation-violation;
};


variabilised-membership sub relation, relates parent, relates member; # abstract
variabilised-collection-membership sub variabilised-membership, relates collection as parent;
variabilised-set-membership sub variabilised-membership, relates set as parent;
variabilised-group-membership sub variabilised-membership, relates group as parent;

user-group plays variabilised-group-membership:group;
subject plays variabilised-group-membership:member;
resource-collection plays variabilised-collection-membership:collection;
object plays variabilised-collection-membership:member;
operation-set plays variabilised-set-membership:set;
action plays variabilised-set-membership:member;


rule copy-collection-memberships:
when { (collection: $c, member:$m) isa collection-membership; }
then { (collection: $c, member:$m) isa variabilised-collection-membership; };

rule copy-group-memberships:
when { (group: $g, member:$m) isa group-membership; }
then { (group: $g, member:$m) isa variabilised-group-membership; };

rule copy-set-memberships:
when { (set: $s, member:$m) isa set-membership; }
then { (set: $s, member:$m) isa variabilised-set-membership; };

rule variabilised-transitive-membership:
when {
        $membership sub variabilised-membership;
        ($parent: $p, $member: $t) isa! $membership;
        ($parent: $t, $member: $m) isa! $membership;
        $membership relates $parent, relates $member;
        $parent sub variabilised-membership:parent;
        $member sub variabilised-membership:member;
} then {
        ($parent: $p, $member: $m) isa $membership;
};
