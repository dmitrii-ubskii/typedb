# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    typeql: [build, release]
    typedb-common: [build, release]
    typedb-protocol: [build, release]
    typedb-behaviour: [build]

build:
  quality:
    filter:
      owner: typedb
      branch: [master, development]
    dependency-analysis:
      image: vaticle-ubuntu-22.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis
  correctness:
    build:
      image: vaticle-ubuntu-22.04
      command: |
        sudo apt update
        sudo apt install -y libclang-dev
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel build //...
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=streamed
#    build-dependency:
#      image: vaticle-ubuntu-22.04
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        dependencies/maven/update.sh
#        git diff --exit-code dependencies/maven/artifacts.snapshot
#        bazel run @vaticle_dependencies//tool/unuseddeps:unused-deps -- list
#    test-unit:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        TODO
#    test-integration:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //compiler/tests/... --test_output=streamed
#        bazel test //concept/tests/... --test_output=streamed
#        bazel test //database/tests/... --test_output=streamed
#        bazel test //durability/tests/... --test_output=streamed
#        bazel test //encoding/tests/... --test_output=streamed
#        bazel test //executor/tests/... --test_output=streamed
#        bazel test //function/tests/... --test_output=streamed
#        bazel test //ir/tests/... --test_output=streamed
#        bazel test //query/tests/... --test_output=streamed
#        bazel test //storage/tests/... --test_output=streamed
#    test-behaviour-connection:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //test/behaviour/connection/... --test_output=streamed
#    test-behaviour-concept: # TODO: Turn it on when concept api and its tests are refactored based on overrides deletion
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //tests/behaviour/concept/... --test_output=streamed
#    test-behaviour-query-read:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //test/behaviour/query/language:test_match --test_output=streamed
#        bazel test //test/behaviour/query/language:test_expressions --test_output=streamed
#        bazel test //test/behaviour/query/language:test_modifiers --test_output=streamed
#        bazel test //test/behaviour/query/language:test_get --test_output=streamed
#        bazel test //test/behaviour/query/language:test_fetch --test_output=streamed
#    test-behaviour-query-write:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //test/behaviour/query/language:test_insert --test_output=streamed
#        bazel test //test/behaviour/query/language:test_delete --test_output=streamed
#        bazel test //test/behaviour/query/language:test_update --test_output=streamed
#        bazel test //test/behaviour/query/language:test_pipelines --test_output=streamed
#    test-behaviour-query-definable:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //test/behaviour/query/language:test_define --test_output=streamed
#        bazel test //test/behaviour/query/language:test_undefine --test_output=streamed
#        bazel test //test/behaviour/query/language:test_redefine --test_output=streamed
#    test-behaviour-functions:
#      image: vaticle-ubuntu-22.04
#      dependencies: [build]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#    test-assembly-linux-targz:
#      image: vaticle-ubuntu-20.04
#      filter:
#        owner: typedb
#        branch: [master, development]
#      dependencies: [build, build-dependency, test-unit, test-integration, test-behaviour-connection, test-behaviour-concept, test-behaviour-query-read, test-behaviour-query-write, test-behaviour-query-definable]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //test/assembly:assembly --test_output=streamed
#    test-assembly-docker:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: [master, development]
#      dependencies: [build, build-dependency, test-unit, test-integration, test-behaviour-connection, test-behaviour-concept, test-behaviour-query-read, test-behaviour-query-write, test-behaviour-query-definable]
#      command: |
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel test //test/assembly:docker --test_output=streamed
#    deploy-artifact-snapshot:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: [master, development]
#      dependencies: [test-assembly-linux-targz]
#      command: |
#        export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run --define version=$(git rev-parse HEAD) //server:deploy-linux-arm64-targz -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //server:deploy-linux-x86_64-targz -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //server:deploy-mac-arm64-zip -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //server:deploy-mac-x86_64-zip -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //server:deploy-windows-x86_64-zip -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-arm64-targz -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-x86_64-targz -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-arm64-zip -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-x86_64-zip -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-windows-x86_64-zip -- snapshot
#    deploy-apt-snapshot:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: [master, development]
#      dependencies: [test-assembly-linux-targz]
#      command: |
#        export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
#        export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-apt-x86_64 -- snapshot
#        bazel run --define version=$(git rev-parse HEAD) //:deploy-apt-arm64 -- snapshot
##    deploy-brew-snapshot:
##      image: vaticle-ubuntu-22.04
##      filter:
##        owner: typedb
##        branch: master
##      command: |
##        export DEPLOY_BREW_TOKEN=$REPO_GITHUB_TOKEN DEPLOY_BREW_USERNAME=$REPO_GITHUB_USERNAME DEPLOY_BREW_EMAIL=$REPO_GITHUB_EMAIL
##        bazel run --define version=$(cat VERSION) //:deploy-brew -- snapshot
#    test-deployment-apt-x86_64:
#      image: vaticle-ubuntu-22.04 # use LTS for apt tests
#      filter:
#        owner: typedb
#        branch: [master, development]
#      dependencies: [deploy-apt-snapshot]
#      command: |
#        export TEST_DEPLOYMENT_APT_COMMIT=$FACTORY_COMMIT
#        bazel test //test/deployment:apt --action_env=TEST_DEPLOYMENT_APT_COMMIT --test_output=streamed
#release:
#  filter:
#    owner: typedb
#    branch: master
#  validation:
#    validate-dependencies:
#      image: vaticle-ubuntu-22.04
#      command: bazel test //:release-validate-deps --test_output=streamed
#    validate-release-notes:
#      image: vaticle-ubuntu-22.04
#      command: |
#        export NOTES_VALIDATE_TOKEN=$REPO_GITHUB_TOKEN
#        bazel run @vaticle_dependencies//tool/release/notes:validate --test_output=streamed -- $FACTORY_OWNER $FACTORY_REPO ./RELEASE_NOTES_LATEST.md
#  deployment:
#    deploy-github:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: master
#      command: |
#        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run --define version=$(cat VERSION) //:deploy-github -- $FACTORY_COMMIT
#    deploy-brew:
#      image: vaticle-ubuntu-22.04
#      dependencies: [deploy-github]
#      filter:
#        owner: typedb
#        branch: master
#      command: |
#        export DEPLOY_BREW_TOKEN=$REPO_GITHUB_TOKEN DEPLOY_BREW_USERNAME=$REPO_GITHUB_USERNAME DEPLOY_BREW_EMAIL=$REPO_GITHUB_EMAIL
#        bazel run --define version=$(cat VERSION) //:deploy-brew -- release
#    deploy-apt-release:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: master
#      dependencies: [deploy-github]
#      command: |
#        export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
#        export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run --define version=$(cat VERSION) //:deploy-apt-x86_64 -- release
#        bazel run --define version=$(cat VERSION) //:deploy-apt-arm64 -- release
#    deploy-docker:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: master
#      dependencies: [deploy-github]
#      command: |
#        docker login -u $REPO_DOCKER_USERNAME -p $REPO_DOCKER_PASSWORD
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run //:deploy-docker-release
#        bazel run //:deploy-docker-release-overwrite-latest-tag
#    deploy-artifact-release:
#      image: vaticle-ubuntu-22.04
#      filter:
#        owner: typedb
#        branch: master
#      dependencies: [deploy-github]
#      command: |
#        export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run --define version=$(cat VERSION) //server:deploy-linux-arm64-targz -- release
#        bazel run --define version=$(cat VERSION) //server:deploy-linux-x86_64-targz -- release
#        bazel run --define version=$(cat VERSION) //server:deploy-mac-arm64-zip -- release
#        bazel run --define version=$(cat VERSION) //server:deploy-mac-x86_64-zip -- release
#        bazel run --define version=$(cat VERSION) //server:deploy-windows-x86_64-zip -- release
#        bazel run --define version=$(cat VERSION) //:deploy-linux-arm64-targz -- release
#        bazel run --define version=$(cat VERSION) //:deploy-linux-x86_64-targz -- release
#        bazel run --define version=$(cat VERSION) //:deploy-mac-arm64-zip -- release
#        bazel run --define version=$(cat VERSION) //:deploy-mac-x86_64-zip -- release
#        bazel run --define version=$(cat VERSION) //:deploy-windows-x86_64-zip -- release
